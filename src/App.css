.app {
	padding: 0em 2em;
}

img {
	max-height: 10rem;
	max-width: 15rem;
}

.nav {
	display: flex;
    justify-content: center;
    align-items: center;
    height: 60px;
    gap: 2rem;
    padding: 0 2rem;
	box-shadow: 0 4px 2px -2px gray;

}

.nav-link{
	text-decoration: none;
}

.nav-text {
	text-transform: uppercase;
	opacity: 0.6;
	color: black;
	font-weight: 700;
	text-decoration: none;
	font-size: .8rem;
	text-decoration: none;
}

.nav-logo{
	margin-right: auto;
	height: 3.5rem;
	width: 3.5rem;
	cursor: pointer;
}

.nav-button {
	margin-left: auto;
	appearance: none;
    background: none;
    display: inline-block;
    padding: .5rem 1rem;
    border: 1px solid #333;
    color: #333;
    text-transform: uppercase;
    border-radius: 4px;
}

.nav-button:hover {
	background: #333;
	color: #fff;
	cursor: pointer;
}

.gallery-container {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
	grid-gap: 1em;
	grid-auto-rows: minmax(100px, auto);
}

.gallery-item {
	box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);
	border: 1px solid #ccc;	
	padding: 1em;
	margin: 1em;
	background: #fff;
}

.challengers {
/* set two cards next to each other and put them in the center */	
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 1em;
	grid-auto-rows: minmax(100px, auto);
}

.challenger-img {
	/* both pictures should have same size no matter what */
	width: 100%;
	height: 100%;
	object-fit: cover;

}

.challenger-card {
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	padding: 1em;
	margin: 1em;
	background: #fff;
	box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);
	border: 1px solid #ccc;
}

.challenger-winner-text {
	text-align: center;
}

.show-winner {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	margin-top: 10rem;
}
/* ---- CARD ---- */

:root {
	--clr-neutral-900: hsl(207, 19%, 9%);
	--clr-neutral-100: hsl(0, 0%, 100%);
	--clr-accent-400: hsl(142, 90%, 61%);
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

.card-container-body {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(18.75rem, 1fr));
	grid-gap: 1em;
	grid-auto-rows: minmax(100px, auto);
	margin-top: 1rem;
	min-height: 100vh;
	place-items: center;
	line-height: 1.6;
	/* background: var(--clr-neutral-900); */
	font-family: sans-serif;
	/* padding-right: 15em; */
}

.card {
	color: var(--clr-neutral-100);
	background-size: cover;
	/* padding: 10rem 0 0; */
	max-width: 35ch;
	border-radius: 1rem;
	overflow: hidden;

	transition: transform 500ms ease;
}

.card:hover,
.card:focus-within {
	transform: scale(1.05)
}

.card-content {
	--padding: 1.5rem;

	padding: var(--padding);
	background: linear-gradient(
		hsl(0 0% 0% / 0),
		hsl(20 0% 0% / 0.3) 20%,
		hsl(0 0% 0% / 1)
	);

}


.card-title {
	position: relative;
	width: max-content;
}

.card-title::after {
	content:"";
	position: absolute;
	height: 4px;
	left: calc(var(--padding) * -1);
	bottom: -2px;
	width: calc(100% + var(--padding));
	background: var(--clr-accent-400);
	transform-origin: left;
	transition: transform 500ms ease;

}

.card:hover .card-title::after,
.card:focus-within .card-title::after {
	transform: scaleX(1);
}

.card-body {
	color: rgb(255, 255, 255 / 0.85);
}

@media (hover) {
	.card-content {
		transform: translateY(65%) ;
		transition: transform 500ms ease;
	}
	.card:hover .card-content,
	.card:focus-within .card-content {
		transform: translateY(0);
		transition-delay: 500ms;
	}

	.card:focus-within .card-content {
		transition-duration: 0ms;
	}

	.card-content > *:not(.card-title) {
		opacity: 0;
		transition: opacity 500ms linear;
	}

	.card:hover .card-content > *:not(.card-title),
	.card:focus-within .card-content > *:not(.card-title) {
		opacity: 1;
		transition-delay: 1000ms;
	}
	.card-title::after {
		transform: scaleX(0);
	}
}

.button {
	cursor: pointer;
	display: inline-block;
	text-decoration: none;
	color: var(--clr-neutral-900);
	background-color: var(--clr-accent-400);
	padding: 0.5em 1.25em;
	border-radius: .25em;
}

.button:hover,
.button:focus {
	background-color: var(--clr-neutral-100);
}




